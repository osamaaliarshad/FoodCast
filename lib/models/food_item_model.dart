import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

// these are the two files that will be generated by freezed
part 'food_item_model.freezed.dart';
part 'food_item_model.g.dart';

@freezed
abstract class FoodItem implements _$FoodItem {
  const FoodItem._();
  const factory FoodItem({
    String? id,
    String? body,
    DateTime? lastMade,
    required String foodName,
    @Default('https://i.imgur.com/QKYJihU.png') String imageUrl,
  }) = _FoodItem;

  // item.empty returns an item with a name and default image
  factory FoodItem.empty() => FoodItem(
        foodName: '',
      );

  // code to generate the json code with freezed. generates the g.dart file
  factory FoodItem.fromJson(Map<String, dynamic> json) =>
      _$FoodItemFromJson(json);

  // used to convert document snapshots from firebase into item models.
  // because our item model contains a name and obtained field, we can use
  // the generated fromJson method to convert our document data into an item
  // we copy the id into the model using copyWith as doc.id is our item id
  factory FoodItem.fromDocument(DocumentSnapshot doc) {
    final data = doc.data()!;
    return FoodItem.fromJson(data).copyWith(id: doc.id);
  }

  // we should add a method to convert item models into type map stream dynamic
  // without the item id so we can add them to firebase
  Map<String, dynamic> toDocument() => toJson()..remove('id');
}
